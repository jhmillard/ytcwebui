{"version":3,"sources":["../../../../server/api/client/client.integration-compiled.js"],"names":[],"mappings":"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","file":"client.integration-compiled.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newClient;\n\ndescribe('Client API:', function () {\n\n  describe('GET /api/clients', function () {\n    var clients;\n\n    beforeEach(function (done) {\n      request(app).get('/api/clients').expect(200).expect('Content-Type', /json/).end((err, res) => {\n        if (err) {\n          return done(err);\n        }\n        clients = res.body;\n        done();\n      });\n    });\n\n    it('should respond with JSON array', function () {\n      clients.should.be.instanceOf(Array);\n    });\n  });\n\n  describe('POST /api/clients', function () {\n    beforeEach(function (done) {\n      request(app).post('/api/clients').send({\n        name: 'New Client',\n        info: 'This is the brand new client!!!'\n      }).expect(201).expect('Content-Type', /json/).end((err, res) => {\n        if (err) {\n          return done(err);\n        }\n        newClient = res.body;\n        done();\n      });\n    });\n\n    it('should respond with the newly created client', function () {\n      newClient.name.should.equal('New Client');\n      newClient.info.should.equal('This is the brand new client!!!');\n    });\n  });\n\n  describe('GET /api/clients/:id', function () {\n    var client;\n\n    beforeEach(function (done) {\n      request(app).get('/api/clients/' + newClient._id).expect(200).expect('Content-Type', /json/).end((err, res) => {\n        if (err) {\n          return done(err);\n        }\n        client = res.body;\n        done();\n      });\n    });\n\n    afterEach(function () {\n      client = {};\n    });\n\n    it('should respond with the requested client', function () {\n      client.name.should.equal('New Client');\n      client.info.should.equal('This is the brand new client!!!');\n    });\n  });\n\n  describe('PUT /api/clients/:id', function () {\n    var updatedClient;\n\n    beforeEach(function (done) {\n      request(app).put('/api/clients/' + newClient._id).send({\n        name: 'Updated Client',\n        info: 'This is the updated client!!!'\n      }).expect(200).expect('Content-Type', /json/).end(function (err, res) {\n        if (err) {\n          return done(err);\n        }\n        updatedClient = res.body;\n        done();\n      });\n    });\n\n    afterEach(function () {\n      updatedClient = {};\n    });\n\n    it('should respond with the updated client', function () {\n      updatedClient.name.should.equal('Updated Client');\n      updatedClient.info.should.equal('This is the updated client!!!');\n    });\n  });\n\n  describe('DELETE /api/clients/:id', function () {\n\n    it('should respond with 204 on successful removal', function (done) {\n      request(app).delete('/api/clients/' + newClient._id).expect(204).end((err, res) => {\n        if (err) {\n          return done(err);\n        }\n        done();\n      });\n    });\n\n    it('should respond with 404 when client does not exist', function (done) {\n      request(app).delete('/api/clients/' + newClient._id).expect(404).end((err, res) => {\n        if (err) {\n          return done(err);\n        }\n        done();\n      });\n    });\n  });\n});\n\n//# sourceMappingURL=client.integration-compiled.js.map"]}
{"version":3,"sources":["../../../../server/api/user/user.controller.js"],"names":[],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\n\nimport _ from 'lodash';\n\nimport User from './user.model';\nimport passport from 'passport';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\n\nvar nodemailer = require('nodemailer');\n\n\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function(entity) {\n    console.log('inside Save Updates')\n    //var updated = _.merge(entity, updates);\n    var updated = _.assign(entity,updates);\n    console.log(\"Merge Has happened\");\n    return updated.saveAsync()\n      .spread(updated => {\n        return updated;\n      });\n  };\n}\n\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    res.status(statusCode).json(err);\n  }\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    console.log(\"error: \" + err);\n    res.status(statusCode).send(err);\n  };\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  User.findAsync({}, '-salt -password')\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res, next) {\n  var newUser = new User(req.body);\n  newUser.provider = 'local';\n  newUser.saveAsync()\n    .spread(function(user) {\n      var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      });\n      res.json({ token });\n    })\n    .catch(validationError(res));\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n\n  User.findByIdAsync(userId)\n    .then(user => {\n      if (!user) {\n        return res.status(404).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  User.findByIdAndRemoveAsync(req.params.id)\n    .then(function() {\n      res.status(204).end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res, next) {\n  var userId = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  User.findByIdAsync(userId)\n    .then(user => {\n      if (user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.saveAsync()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n\n  User.findOneAsync({ _id: userId }, '-salt -password')\n    .then(user => { // don't ever give out the password or salt\n      if (!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\n// Updates an existing Po in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  console.log(\"before find by id async: \" + req.params.id);\n  User.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res, next) {\n  res.redirect('/');\n}\n\n\nexport function getrole(req, res) {\n  User.findAsync({role: req.params.role})\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\nexport function sendEmail(req,res){\n\n  var smtpConfig = {\n    host: 'box895.bluehost.com',\n    port: 465,\n    secure: true, // use SSL\n    auth: {\n      user: 'info@yellowtoadconsulting.com',\n      pass: '$theCure1001'\n    }\n  };\n\n  var mailData = {\n    from: 'info@yellowtoadconsulting.com',\n    to: 'john.millard@yellowtoadconsulting.com',\n    subject: 'Time Entered For: ' + req.body.contractor,\n    text: 'Plaintext version of the message',\n    html: \"<table> <tr> <td><h2 style='color:blue'><b>Contractor: \" + req.body.contractor + \"</b></h2></td> </tr>\" +\n          \"<tr> <td>Hours Entered: <h1 style='color:red'>\" + req.body.hours + \"</h1>\" +\n          \"</td> </tr> <tr> <td>Purchase Order: <h1 style='color:green'>\" + req.body.po.name + \"</h1></td> </tr>\" +\n          \"<tr> <td>Date: \" + req.body.short_date + \"</td> </tr>\" +\n          \"<tr> <td>Type: \" + req.body.category + \"</td> </tr>\" +\n          \"<tr> <td>Description: \" + req.body.desc + \"</td> </tr>\" +\n          \"</table>\"\n\n\n\n\n\n\n\n\n  };\n\n  var transporter = nodemailer.createTransport(smtpConfig);\n  transporter.sendMail(mailData,(error,response)=>{\n      if(error){\n        console.log(error);\n        var statusCode = 500;\n        res.status(statusCode).send(error);\n        return res;\n\n      }else{\n        console.log(\"Message Sent: \" + response.message);\n        res.status(200).send(response);\n      }\n\n  })\n\n  //this will use the node email structure to send an email using data from the request\n  //req.body will contain all of the information required to send the mail.\n\n  //use nodemailer:\n\n\n\n}\n"]}
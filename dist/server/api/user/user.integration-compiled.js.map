{"version":3,"sources":["../../../../server/api/user/user.integration-compiled.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;gBAEG,OAAO;;;;yBACN,cAAc;;;;yBACX,WAAW;;;;AAE/B,QAAQ,CAAC,WAAW,EAAE,YAAY;AAChC,MAAI,IAAI,CAAC;;;AAGT,QAAM,CAAC,YAAY;AACjB,WAAO,uBAAK,WAAW,EAAE,CAAC,IAAI,CAAC,YAAY;AACzC,UAAI,GAAG,2BAAS;AACd,YAAI,EAAE,WAAW;AACjB,aAAK,EAAE,kBAAkB;AACzB,gBAAQ,EAAE,UAAU;OACrB,CAAC,CAAC;;AAEH,aAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KACzB,CAAC,CAAC;GACJ,CAAC,CAAC;;;AAGH,OAAK,CAAC,YAAY;AAChB,WAAO,uBAAK,WAAW,EAAE,CAAC;GAC3B,CAAC,CAAC;;AAEH,UAAQ,CAAC,mBAAmB,EAAE,YAAY;AACxC,QAAI,KAAK,CAAC;;AAEV,UAAM,CAAC,UAAU,IAAI,EAAE;AACrB,gDAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;AACpC,aAAK,EAAE,kBAAkB;AACzB,gBAAQ,EAAE,UAAU;OACrB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AAC9D,aAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;AACvB,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,MAAE,CAAC,uDAAuD,EAAE,UAAU,IAAI,EAAE;AAC1E,gDAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACrI,WAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1D,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,MAAE,CAAC,kDAAkD,EAAE,UAAU,IAAI,EAAE;AACrE,gDAAY,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACzD,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"user.integration-compiled.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport User from './user.model';\nimport request from 'supertest';\n\ndescribe('User API:', function () {\n  var user;\n\n  // Clear users before testing\n  before(function () {\n    return User.removeAsync().then(function () {\n      user = new User({\n        name: 'Fake User',\n        email: 'test@example.com',\n        password: 'password'\n      });\n\n      return user.saveAsync();\n    });\n  });\n\n  // Clear users after testing\n  after(function () {\n    return User.removeAsync();\n  });\n\n  describe('GET /api/users/me', function () {\n    var token;\n\n    before(function (done) {\n      request(app).post('/auth/local').send({\n        email: 'test@example.com',\n        password: 'password'\n      }).expect(200).expect('Content-Type', /json/).end((err, res) => {\n        token = res.body.token;\n        done();\n      });\n    });\n\n    it('should respond with a user profile when authenticated', function (done) {\n      request(app).get('/api/users/me').set('authorization', 'Bearer ' + token).expect(200).expect('Content-Type', /json/).end((err, res) => {\n        res.body._id.toString().should.equal(user._id.toString());\n        done();\n      });\n    });\n\n    it('should respond with a 401 when not authenticated', function (done) {\n      request(app).get('/api/users/me').expect(401).end(done);\n    });\n  });\n});\n\n//# sourceMappingURL=user.integration-compiled.js.map"]}
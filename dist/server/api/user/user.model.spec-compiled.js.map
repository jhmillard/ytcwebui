{"version":3,"sources":["../../../../server/api/user/user.model.spec-compiled.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;gBAEG,OAAO;;;;yBACN,cAAc;;;;AAC/B,IAAI,IAAI,CAAC;AACT,IAAI,OAAO,GAAG,SAAV,OAAO,GAAe;AACxB,MAAI,GAAG,2BAAS;AACd,YAAQ,EAAE,OAAO;AACjB,QAAI,EAAE,WAAW;AACjB,SAAK,EAAE,kBAAkB;AACzB,YAAQ,EAAE,UAAU;GACrB,CAAC,CAAC;AACH,SAAO,IAAI,CAAC;CACb,CAAC;;AAEF,QAAQ,CAAC,YAAY,EAAE,YAAY;AACjC,QAAM,CAAC,YAAY;;AAEjB,WAAO,uBAAK,WAAW,EAAE,CAAC;GAC3B,CAAC,CAAC;;AAEH,YAAU,CAAC,YAAY;AACrB,WAAO,EAAE,CAAC;GACX,CAAC,CAAC;;AAEH,WAAS,CAAC,YAAY;AACpB,WAAO,uBAAK,WAAW,EAAE,CAAC;GAC3B,CAAC,CAAC;;AAEH,IAAE,CAAC,4BAA4B,EAAE,YAAY;AAC3C,WAAO,uBAAK,SAAS,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;GAC5D,CAAC,CAAC;;AAEH,IAAE,CAAC,0CAA0C,EAAE,YAAY;AACzD,WAAO,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,YAAY;AACvC,UAAI,OAAO,GAAG,OAAO,EAAE,CAAC;AACxB,aAAO,OAAO,CAAC,SAAS,EAAE,CAAC;KAC5B,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC;GACvB,CAAC,CAAC;;AAEH,UAAQ,CAAC,QAAQ,EAAE,YAAY;AAC7B,MAAE,CAAC,0CAA0C,EAAE,YAAY;AACzD,UAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,aAAO,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC;KAC5C,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,WAAW,EAAE,YAAY;AAChC,cAAU,CAAC,YAAY;AACrB,aAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KACzB,CAAC,CAAC;;AAEH,MAAE,CAAC,mCAAmC,EAAE,YAAY;AAClD,UAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE,QAAK,CAAC;KAC9C,CAAC,CAAC;;AAEH,MAAE,CAAC,yCAAyC,EAAE,YAAY;AACxD,UAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,QAAK,CAAC;KAC9C,CAAC,CAAC;;AAEH,MAAE,CAAC,4DAA4D,EAAE,YAAY;AAC3E,UAAI,CAAC,IAAI,GAAG,WAAW,CAAC;AACxB,aAAO,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;AAC1C,eAAO,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;OACnC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,QAAK,CAAC;KAC9B,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"user.model.spec-compiled.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport User from './user.model';\nvar user;\nvar genUser = function () {\n  user = new User({\n    provider: 'local',\n    name: 'Fake User',\n    email: 'test@example.com',\n    password: 'password'\n  });\n  return user;\n};\n\ndescribe('User Model', function () {\n  before(function () {\n    // Clear users before testing\n    return User.removeAsync();\n  });\n\n  beforeEach(function () {\n    genUser();\n  });\n\n  afterEach(function () {\n    return User.removeAsync();\n  });\n\n  it('should begin with no users', function () {\n    return User.findAsync({}).should.eventually.have.length(0);\n  });\n\n  it('should fail when saving a duplicate user', function () {\n    return user.saveAsync().then(function () {\n      var userDup = genUser();\n      return userDup.saveAsync();\n    }).should.be.rejected;\n  });\n\n  describe('#email', function () {\n    it('should fail when saving without an email', function () {\n      user.email = '';\n      return user.saveAsync().should.be.rejected;\n    });\n  });\n\n  describe('#password', function () {\n    beforeEach(function () {\n      return user.saveAsync();\n    });\n\n    it('should authenticate user if valid', function () {\n      user.authenticate('password').should.be.true;\n    });\n\n    it('should not authenticate user if invalid', function () {\n      user.authenticate('blah').should.not.be.true;\n    });\n\n    it('should remain the same hash unless the password is updated', function () {\n      user.name = 'Test User';\n      return user.saveAsync().spread(function (u) {\n        return u.authenticate('password');\n      }).should.eventually.be.true;\n    });\n  });\n});\n\n//# sourceMappingURL=user.model.spec-compiled.js.map"]}
{"version":3,"sources":["user.integration.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,GAAG,MAAM,OAAO,CAAC;AACxB,OAAO,IAAI,MAAM,cAAc,CAAC;AAChC,OAAO,OAAO,MAAM,WAAW,CAAC;;AAEhC,QAAQ,CAAC,WAAW,EAAE,YAAW;AAC/B,MAAI,IAAI;;;AAAC,AAGT,QAAM,CAAC,YAAW;AAChB,WAAO,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,YAAW;AACxC,UAAI,GAAG,IAAI,IAAI,CAAC;AACd,YAAI,EAAE,WAAW;AACjB,aAAK,EAAE,kBAAkB;AACzB,gBAAQ,EAAE,UAAU;OACrB,CAAC,CAAC;;AAEH,aAAO,IAAI,CAAC,SAAS,EAAE,CAAC;KACzB,CAAC,CAAC;GACJ,CAAC;;;AAAC,AAGH,OAAK,CAAC,YAAW;AACf,WAAO,IAAI,CAAC,WAAW,EAAE,CAAC;GAC3B,CAAC,CAAC;;AAEH,UAAQ,CAAC,mBAAmB,EAAE,YAAW;AACvC,QAAI,KAAK,CAAC;;AAEV,UAAM,CAAC,UAAS,IAAI,EAAE;AACpB,aAAO,CAAC,GAAG,CAAC,CACT,IAAI,CAAC,aAAa,CAAC,CACnB,IAAI,CAAC;AACJ,aAAK,EAAE,kBAAkB;AACzB,gBAAQ,EAAE,UAAU;OACrB,CAAC,CACD,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAC9B,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK;AACjB,aAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;AACvB,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,uDAAuD,EAAE,UAAS,IAAI,EAAE;AACzE,aAAO,CAAC,GAAG,CAAC,CACT,GAAG,CAAC,eAAe,CAAC,CACpB,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,CACvC,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAC9B,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK;AACjB,WAAG,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1D,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,kDAAkD,EAAE,UAAS,IAAI,EAAE;AACpE,aAAO,CAAC,GAAG,CAAC,CACT,GAAG,CAAC,eAAe,CAAC,CACpB,MAAM,CAAC,GAAG,CAAC,CACX,GAAG,CAAC,IAAI,CAAC,CAAC;KACd,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"user.integration-compiled.js","sourcesContent":["'use strict';\n\nimport app from '../..';\nimport User from './user.model';\nimport request from 'supertest';\n\ndescribe('User API:', function() {\n  var user;\n\n  // Clear users before testing\n  before(function() {\n    return User.removeAsync().then(function() {\n      user = new User({\n        name: 'Fake User',\n        email: 'test@example.com',\n        password: 'password'\n      });\n\n      return user.saveAsync();\n    });\n  });\n\n  // Clear users after testing\n  after(function() {\n    return User.removeAsync();\n  });\n\n  describe('GET /api/users/me', function() {\n    var token;\n\n    before(function(done) {\n      request(app)\n        .post('/auth/local')\n        .send({\n          email: 'test@example.com',\n          password: 'password'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          token = res.body.token;\n          done();\n        });\n    });\n\n    it('should respond with a user profile when authenticated', function(done) {\n      request(app)\n        .get('/api/users/me')\n        .set('authorization', 'Bearer ' + token)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          res.body._id.toString().should.equal(user._id.toString());\n          done();\n        });\n    });\n\n    it('should respond with a 401 when not authenticated', function(done) {\n      request(app)\n        .get('/api/users/me')\n        .expect(401)\n        .end(done);\n    });\n  });\n});\n"]}